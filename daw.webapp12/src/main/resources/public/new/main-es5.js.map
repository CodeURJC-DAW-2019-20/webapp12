{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/advertisement/advertisement.component.ts","webpack:///src/app/advertisement/advertisement.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/error.interceptor.ts","webpack:///src/app/auth/login.service.ts","webpack:///src/app/blog-list.component.ts","webpack:///src/app/blog-list.component.html","webpack:///src/app/book-detail/book-detail.component.ts","webpack:///src/app/book-detail/book-detail.component.html","webpack:///src/app/book-form/book-form.component.ts","webpack:///src/app/book-form/book-form.component.html","webpack:///src/app/book-list/book-list.component.ts","webpack:///src/app/book-list/book-list.component.html","webpack:///src/app/header.component.ts","webpack:///src/app/header.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/service/advertisement.service.ts","webpack:///src/app/service/blog.service.ts","webpack:///src/app/service/book.service.ts","webpack:///src/app/service/search.service.ts","webpack:///src/app/service/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AdvertisementComponent","router","service","loginService","getAdvertisements","subscribe","advertisements","error","console","log","navigate","selector","templateUrl","AppComponent","media","dialog","_changeDetectorRef","_iconRegistry","_domSanitizer","addSvgIconInNamespace","bypassSecurityTrustResourceUrl","production","mode","broadcast","detectChanges","styleUrls","animations","AppModule","matIconRegistry","domSanitizer","addSvgIconSet","provide","useClass","multi","forRoot","imports","declarations","bootstrap","providers","appRoutes","path","component","useAsDefault","routing","BasicAuthInterceptor","request","next","user","JSON","parse","localStorage","getItem","authdata","clone","setHeaders","Authorization","handle","ErrorInterceptor","pipe","err","status","removeCurrentUser","URL","LoginService","http","isLogged","isAdmin","setCurrentUser","pass","auth","window","btoa","headers","get","setItem","stringify","response","roles","indexOf","removeItem","blogListComponent","blogService","blogs","getBlogs","page","quantity","BookDetailComponent","activatedRoute","_dialogService","snapshot","params","getBook","book","openConfirm","message","title","width","height","afterClosed","accept","removeBook","_","BookFormComponent","_router","newBook","description","history","back","saveBook","BookListComponent","getBooks","books","HeaderComponent","LoginComponent","event","preventDefault","logIn","u","dialogRef","close","alert","logOut","open","loginDialog","BASE_URL","baseUrl","GET_ADVERTISEMENT","DELETE_ADVERTISEMENT","CREATE_ADVERTISEMENT","AdvertisementService","urlEndPoint","text","file","formData","FormData","append","reportProgress","withCredentials","handleError","advertisement","body","post","GET_BLOG","GET_BLOGS","DELETE_BLOG","CREATE_BLOG","BlogService","blog","BookService","put","SearchService","UserService","environment","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","  import { Component, OnInit } from '@angular/core';\r\n  import { Router } from '@angular/router';\r\n  import { CommonModule } from '@angular/common';\r\n  import { MatDialog } from '@angular/material/dialog';\r\n  import { LoginService } from '../auth/login.service';\r\n  import { Advertisement, AdvertisementService } from '../service/advertisement.service';\r\n\r\n  \r\n  \r\n  \r\n  @Component({\r\n    selector: 'advertisements',\r\n    templateUrl: 'advertisement.component.html'\r\n  })\r\n  export class AdvertisementComponent implements OnInit {\r\n  \r\n    advertisements: Advertisement[];\r\n  \r\n    constructor(private router: Router, private service: AdvertisementService,\r\n      public loginService: LoginService) { }\r\n  \r\n    ngOnInit() {\r\n      this.service.getAdvertisements().subscribe(\r\n        advertisements => this.advertisements = advertisements,\r\n        error => console.log(error)\r\n      );\r\n    }\r\n  \r\n    newAdvertisement() {\r\n      this.router.navigate(['/advertisement/new']);\r\n    }\r\n  }\r\n  \r\n\r\n\r\n","<mat-card>\r\n    <mat-card-title>\r\n        <div layout=\"row\" layout-align=\"start center\">\r\n            <span flex>Advertisements</span>\r\n        </div>\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n    <mat-card-content>\r\n        <div>\r\n            <mat-nav-list *ngIf=\"loginService.isLogged\">\r\n                <a *ngFor=\"let advertisement of advertisements\" mat-list-item [routerLink]=\"['/AllProperties', advertisement.id]\">\r\n                    {{ advertisement.type }}\r\n                </a>\r\n            </mat-nav-list>\r\n\r\n            <mat-nav-list *ngIf=\"!loginService.isLogged\">\r\n                <mat-list-item [ngStyle]=\"{ cursor: 'auto' }\" *ngFor=\"let advertisement of advertisements\">\r\n                    {{ advertisement.type }}\r\n                </mat-list-item>\r\n            </mat-nav-list>\r\n        </div>\r\n\r\n        <div layout=\"column\" layout-align=\"center end\" *ngIf=\"loginService.isLogged && loginService.isAdmin\">\r\n            <mat-divider inset=\"true\"></mat-divider>\r\n            <button mat-raised-button color=\"accent\" class=\"push-top-sm\" *ngIf=\"loginService.isLogged\" (click)=\"newAdvertisement()\">\r\n                <mat-icon>add</mat-icon> New\r\n            </button>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n\r\n","import { Component, ChangeDetectorRef, AfterViewInit } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nimport { TdMediaService } from '@covalent/core/media';\r\nimport { tdRotateAnimation } from '@covalent/core/common';\r\nimport { environment } from '../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css', '../styles/animate.css'],\r\n    animations: [tdRotateAnimation],\r\n})\r\nexport class AppComponent implements AfterViewInit {\r\n\r\n    mode: string;\r\n\r\n    constructor(\r\n        public media: TdMediaService,\r\n        public dialog: MatDialog,\r\n        private _changeDetectorRef: ChangeDetectorRef,\r\n        private _iconRegistry: MatIconRegistry,\r\n        private _domSanitizer: DomSanitizer\r\n    ) \r\n    {\r\n        this._iconRegistry.addSvgIconInNamespace(\r\n            'assets',\r\n            'covalent',\r\n            this._domSanitizer.bypassSecurityTrustResourceUrl(\r\n                'https://raw.githubusercontent.com/Teradata/covalent-quickstart/develop/src/assets/icons/covalent.svg',\r\n            ),\r\n        );\r\n\r\n        if(environment.production){\r\n            this.mode = \"Production\";\r\n        } else {\r\n            this.mode = \"Development\";\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        // broadcast to all listener observables when loading the page\r\n        this.media.broadcast();\r\n        this._changeDetectorRef.detectChanges();\r\n    }\r\n\r\n}\r\n","<td-layout [mode]=\"(media.registerQuery('gt-sm') | async) ? 'side' : 'push'\" [sidenavWidth]=\"(media.registerQuery('gt-xs') | async) ? '240px' : '100%'\">\r\n\r\n    <!-- <mat-toolbar color=\"primary\">\r\n        <mat-toolbar-row>\r\n            <span>Ruvik</span>\r\n            <span class=\"example-spacer\"></span>\r\n            <login></login>\r\n        </mat-toolbar-row>\r\n    </mat-toolbar> -->\r\n\r\n    <myHeader>\r\n\r\n    </myHeader>\r\n\r\n    <!-- <div flex layout-gt-sm=\"row\" tdMediaToggle=\"gt-xs\" layout-wrap [mediaClasses]=\"['push-sm']\">\r\n\r\n        <div flex-gt-sm=\"100\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div> -->\r\n\r\n    <router-outlet></router-outlet>\r\n\r\n    <!-- <td-layout-footer>\r\n        <div layout=\"row\" layout-align=\"start center\">\r\n            <span class=\"mat-caption\">Made with <mat-icon class=\"text-md\">favorite</mat-icon> in CodeURJC Software\r\n                    Lab ({{mode}})</span>\r\n        </div>\r\n    </td-layout-footer> -->\r\n</td-layout>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\nimport { CovalentCommonModule} from '@covalent/core/common'\r\nimport { CovalentLayoutModule} from '@covalent/core/layout'\r\nimport { CovalentMediaModule} from '@covalent/core/media'\r\nimport { CovalentExpansionPanelModule} from '@covalent/core/expansion-panel'\r\nimport { CovalentStepsModule} from '@covalent/core/steps'\r\nimport { CovalentLoadingModule} from '@covalent/core/loading'\r\nimport { CovalentDialogsModule} from '@covalent/core/dialogs'\r\nimport { CovalentSearchModule} from '@covalent/core/search'\r\nimport { CovalentPagingModule} from '@covalent/core/paging'\r\nimport { CovalentNotificationsModule} from '@covalent/core/notifications'\r\nimport { CovalentMenuModule} from '@covalent/core/menu'\r\nimport { CovalentDataTableModule} from '@covalent/core/data-table'\r\nimport { CovalentMessageModule} from '@covalent/core/message'\r\n\r\n//import { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { LoginService } from './auth/login.service';\r\nimport { routing } from './app.routing';\r\nimport { ErrorInterceptor } from './auth/error.interceptor';\r\nimport { BasicAuthInterceptor } from './auth/auth.interceptor';\r\nimport { LocationStrategy, HashLocationStrategy } from '@angular/common';\r\nimport { BookService } from './service/book.service';\r\nimport { AdvertisementComponent } from './advertisement/advertisement.component';\r\n\r\nimport { BookDetailComponent } from './book-detail/book-detail.component';\r\nimport { BookListComponent } from './book-list/book-list.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { BookFormComponent } from './book-form/book-form.component';\r\nimport { BlogService } from './service/blog.service';\r\nimport { UserService } from './service/user.service';\r\nimport { AdvertisementService } from './service/advertisement.service';\r\nimport { SearchService } from './service/search.service';\r\nimport { HeaderComponent } from './header.component';\r\nimport { blogListComponent } from './blog-list.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        FormsModule,\r\n        RouterModule.forRoot([]),\r\n        HttpClientModule,\r\n        /** Material Modules */\r\n        MatButtonModule,\r\n        MatListModule,\r\n        MatIconModule,\r\n        MatCardModule,\r\n        MatMenuModule,\r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatButtonToggleModule,\r\n        MatSlideToggleModule,\r\n        MatProgressSpinnerModule,\r\n        MatDialogModule,\r\n        MatSnackBarModule,\r\n        MatToolbarModule,\r\n        MatTabsModule,\r\n        MatSidenavModule,\r\n        MatTooltipModule,\r\n        MatRippleModule,\r\n        MatRadioModule,\r\n        MatGridListModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatSliderModule,\r\n        MatAutocompleteModule,\r\n        MatInputModule,\r\n        /** Covalent Modules */\r\n        CovalentCommonModule,\r\n        CovalentLayoutModule,\r\n        CovalentMediaModule,\r\n        CovalentExpansionPanelModule,\r\n        CovalentStepsModule,\r\n        CovalentDialogsModule,\r\n        CovalentLoadingModule,\r\n        CovalentSearchModule,\r\n        CovalentPagingModule,\r\n        CovalentNotificationsModule,\r\n        CovalentMenuModule,\r\n        CovalentDataTableModule,\r\n        CovalentMessageModule,\r\n        /** Additional **/\r\n        //NgxChartsModule,\r\n        routing,\r\n    ],\r\n    declarations: [AppComponent, BookDetailComponent, BookListComponent, AdvertisementComponent , BookFormComponent, LoginComponent, HeaderComponent, \r\n        blogListComponent],\r\n    bootstrap: [AppComponent],\r\n    providers: [BookService, LoginService,BlogService, UserService, AdvertisementService,SearchService,\r\n        { provide: HTTP_INTERCEPTORS, useClass: BasicAuthInterceptor, multi: true },\r\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n        { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n    ],\r\n})\r\nexport class AppModule {\r\n    constructor(private matIconRegistry: MatIconRegistry, private domSanitizer: DomSanitizer) {\r\n        matIconRegistry.addSvgIconSet(domSanitizer.bypassSecurityTrustResourceUrl('/assets/symbol-defs.svg'));\r\n    }\r\n}\r\n","import { RouterModule } from '@angular/router';\r\nimport { BookListComponent } from './book-list/book-list.component';\r\nimport { BookFormComponent } from './book-form/book-form.component';\r\nimport { BookDetailComponent } from './book-detail/book-detail.component';\r\nimport { AdvertisementComponent } from './advertisement/advertisement.component';\r\nimport { blogListComponent } from './blog-list.component';\r\n\r\n\r\nconst appRoutes = [\r\n  { path: 'advertisement', component: AdvertisementComponent, useAsDefault: true },\r\n  { path: 'book/new', component: BookFormComponent },\r\n  { path: 'book/:id', component: BookDetailComponent },\r\n  { path: 'book/edit/:id', component: BookFormComponent },\r\n  // { path: '', redirectTo: 'advertisement', pathMatch: 'full' },\r\n  { path: 'blog', component: blogListComponent }\r\n];\r\n\r\nexport const routing = RouterModule.forRoot(appRoutes);\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n// Strategy based on http://jasonwatmore.com/post/2018/09/07/angular-6-basic-http-authentication-tutorial-example\r\n@Injectable()\r\nexport class BasicAuthInterceptor implements HttpInterceptor {\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        \r\n        // add authorization header with basic auth credentials if available\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        \r\n        if (user && user.authdata) {\r\n            request = request.clone({\r\n                setHeaders: { \r\n                    Authorization: `Basic ${user.authdata}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n \r\n    constructor(private loginService: LoginService) {}\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request).pipe(catchError(err => {\r\n            \r\n            if (err.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                this.loginService.removeCurrentUser();\r\n                //location.reload(true);\r\n            }\r\n            \r\n            return throwError(err);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst URL = '/api';\r\n\r\nexport interface User {\r\n    id?: number;\r\n    name: string;\r\n    roles: string[];\r\n    authdata: string;\r\n}\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n\r\n    isLogged = false;\r\n    isAdmin = false;\r\n    user: User;\r\n    auth: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        let user = JSON.parse(localStorage.getItem('currentUser'));\r\n        if (user) {\r\n            console.log('Logged user');\r\n            this.setCurrentUser(user);\r\n        }\r\n    }\r\n\r\n    logIn(user: string, pass: string) {\r\n\r\n        let auth = window.btoa(user + ':' + pass);\r\n\r\n        const headers = new HttpHeaders({\r\n            Authorization: 'Basic ' + auth,\r\n            'X-Requested-With': 'XMLHttpRequest',\r\n        });\r\n\r\n        return this.http.get<User>('/api/logIn', { headers })\r\n            .pipe(map(user => {\r\n\r\n                if (user) {\r\n                    this.setCurrentUser(user);\r\n                    user.authdata = auth;\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                }\r\n\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logOut() {\r\n\r\n        return this.http.get(URL + '/logOut').pipe(\r\n            map(response => {\r\n                this.removeCurrentUser();\r\n                return response;\r\n            }),\r\n        );\r\n    }\r\n\r\n    private setCurrentUser(user: User) {\r\n        this.isLogged = true;\r\n        this.user = user;\r\n        this.isAdmin = this.user.roles.indexOf('ROLE_ADMIN') !== -1;\r\n    }\r\n\r\n    removeCurrentUser() {\r\n        localStorage.removeItem('currentUser');\r\n        this.isLogged = false;\r\n        this.isAdmin = false;\r\n    }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport { BlogService } from './service/blog.service';\r\nimport { Blog } from './entity/blog';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n templateUrl:\r\n './blog-list.component.html',\r\n})\r\n\r\nexport class blogListComponent {\r\n    blogs: Blog[];\r\n    constructor(private blogService: BlogService){\r\n        this.blogs = [];\r\n    }\r\n\r\n    ngOnInit(){\r\n        console.log(\"give me some\");\r\n        this.blogService.getBlogs(0,5).subscribe(\r\n          blogs=>this.blogs=blogs,\r\n          error=>console.log(error)\r\n        );\r\n        // this.blogService.getBlogsNumber().subscribe(\r\n        //     blogs=>this.total=blogs,\r\n        //     error=>console.log(error));\r\n    }\r\n\r\n    getBlogs(page: number, quantity: number){\r\n        this.blogService.getBlogs(page,quantity).subscribe(\r\n            blogs=>this.blogs=blogs,\r\n            error=>console.log(error)\r\n        );\r\n    }\r\n}","<!-- <h1>El blog de los mejores</h1> -->\r\n\r\n<section class=\"hero-wrap hero-wrap-2 ftco-degree-bg js-fullheight\" style=\"background-image: url('assets/bg_1.jpg');\"\r\n  data-stellar-background-ratio=\"0.5\">\r\n  <div class=\"overlay\"></div>\r\n  <div class=\"container\">\r\n    <div class=\"row no-gutters slider-text js-fullheight align-items-center justify-content-center\">\r\n      <div class=\"col-md-9 pb-5 text-center\">\r\n        <p class=\"breadcrumbs\"><span class=\"mr-2\"><a href=\"index.html\">Home <i\r\n                class=\"ion-ios-arrow-forward\"></i></a></span> <span>Blog <i class=\"ion-ios-arrow-forward\"></i></span>\r\n        </p>\r\n        <h1 class=\"mb-3 bread\">Nuestro Blog</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n\r\n<section class=\"ftco-section\">\r\n  <div *ngFor=\"let blog of blogs\">\r\n\r\n    <div class=\"container\">\r\n      <div class=\"row d-flex\">\r\n        <div class=\"col-md-3 d-flex \">\r\n          <div class=\"blog-entry justify-content-end\">\r\n            <div class=\"text\">\r\n              <h3 class=\"heading\"><a href=\"#\">{{blog.title}}\r\n                </a></h3>\r\n              <div class=\"meta mb-3\">\r\n                <div><a>July. 24, 2019</a></div>\r\n                <div><a>Diana</a></div>\r\n              </div>\r\n              <a class=\"block-20 img\" style=\"background-image: url('assets/image_1.jpg');\"></a>\r\n              <p>{{blog.text}}</p>\r\n              <div id=\"blogMethods\">\r\n                <a class=\"btn d-flex align-items-center btn-custom-edit\" id=\"deleteMethod\" style=\"float:left;\">\r\n                  <span class=\"icon-trash\"></span>\r\n                </a>\r\n                <a class=\"d-flex align-items-center btn-custom-edit2\" id=\"updateMethod\">\r\n                  <span class=\"icon-edit\" style=\"top: 5px;\"></span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n<!-- {{/blogs}} -->\r\n","import { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\nimport { TdDialogService } from '@covalent/core/dialogs';\r\nimport { BookService, Book } from '../service/book.service';\r\nimport { LoginService } from '../auth/login.service';\r\n\r\n@Component({\r\n    selector: 'book-detail',\r\n    templateUrl: 'book-detail.component.html'\r\n})\r\nexport class BookDetailComponent {\r\n    book: Book;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        activatedRoute: ActivatedRoute,\r\n        public service: BookService,\r\n        public loginService: LoginService,\r\n        private _dialogService: TdDialogService,\r\n    ) {\r\n        const id = activatedRoute.snapshot.params['id'];\r\n        service.getBook(id).subscribe((book) => (this.book = book), (error) => console.error(error));\r\n    }\r\n\r\n    removeBook() {\r\n\r\n        this._dialogService.openConfirm({\r\n            message: 'Do you want to remove this book?',\r\n            title: 'Confirm', \r\n            width: '500px', \r\n            height: '175px'\r\n        }).afterClosed().subscribe((accept: boolean) => {\r\n            if (accept) {\r\n                this.service\r\n                    .removeBook(this.book)\r\n                    .subscribe((_) => this.router.navigate(['/books']), (error) => console.error(error));\r\n            }\r\n        });\r\n    }\r\n\r\n    editBook() {\r\n        this.router.navigate(['/book/edit', this.book.id]);\r\n    }\r\n\r\n    gotoBooks() {\r\n        this.router.navigate(['/books']);\r\n    }\r\n}\r\n","<div *ngIf=\"book\">\r\n    <mat-card>\r\n        <mat-card-title> Book \"{{ book.title }}\"</mat-card-title>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-content>\r\n            <div>\r\n                <p>{{ book.description }}</p>\r\n            </div>\r\n            <div layout=\"row\" layout-align=\"end center\">\r\n                <ng-container *ngIf=\"loginService.isLogged && loginService.isAdmin\">\r\n                    <button mat-raised-button color=\"accent\" (click)=\"removeBook()\"><mat-icon>delete</mat-icon>Remove</button>\r\n                    <button mat-raised-button color=\"accent\" (click)=\"editBook()\" class=\"push-left-sm\">\r\n                        <mat-icon>edit</mat-icon>Edit\r\n                    </button>\r\n                </ng-container>\r\n                <button mat-raised-button color=\"accent\" (click)=\"gotoBooks()\" class=\"push-left-sm\">\r\n                    <mat-icon>list</mat-icon>All Books\r\n                </button>\r\n            </div>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Book, BookService } from '../service/book.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'book-form',\r\n    templateUrl: 'book-form.component.html'\r\n})\r\nexport class BookFormComponent {\r\n    \r\n    newBook: boolean;\r\n    book: Book;\r\n\r\n    constructor(private _router: Router, activatedRoute: ActivatedRoute, private service: BookService) {\r\n        const id = activatedRoute.snapshot.params['id'];\r\n        if (id) {\r\n            service.getBook(id).subscribe((book) => (this.book = book), (error) => console.error(error));\r\n            this.newBook = false;\r\n        } else {\r\n            this.book = { title: '', description: '' };\r\n            this.newBook = true;\r\n        }\r\n    }\r\n\r\n    cancel() {\r\n        window.history.back();\r\n    }\r\n\r\n    save() {\r\n        this.service.saveBook(this.book).subscribe(\r\n            _ => {},\r\n            (error: Error) => console.error('Error creating new book: ' + error),\r\n        );\r\n        window.history.back();\r\n    }\r\n}\r\n","<div *ngIf=\"book\">\r\n    <mat-card>\r\n        <mat-card-title> Book \"{{ book.title }}\"</mat-card-title>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-content>\r\n            <form #bookForm=\"ngForm\">\r\n                <div *ngIf=\"book.id\"><label>Id: </label>{{ book.id }}</div>\r\n                <div>\r\n                    <mat-form-field>\r\n                        <input\r\n                            matInput\r\n                            [(ngModel)]=\"book.title\"\r\n                            placeholder=\"Title\"\r\n                            #bookFormElement\r\n                            #bookFormControl=\"ngModel\"\r\n                            name=\"title\"\r\n                            required\r\n                        />\r\n                    </mat-form-field>\r\n                </div>\r\n                <div layout=\"column\">\r\n                    <mat-form-field>\r\n                        <textarea\r\n                            matInput\r\n                            [(ngModel)]=\"book.description\"\r\n                            placeholder=\"Description\"\r\n                            #bookFormElement\r\n                            #bookFormControl=\"ngModel\"\r\n                            name=\"description\"\r\n                            required\r\n                        ></textarea>\r\n                    </mat-form-field>\r\n                </div>\r\n            </form>\r\n        </mat-card-content>\r\n        <mat-divider></mat-divider>\r\n        <mat-card-actions>\r\n            <div layout=\"row\" layout-align=\"end center\">\r\n                <button mat-raised-button color=\"accent\" (click)=\"cancel()\">Cancel</button>\r\n                <button\r\n                    mat-raised-button\r\n                    color=\"accent\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"bookForm === undefined || (bookForm && !bookForm.valid)\"\r\n                    class=\"push-left-sm\"\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </mat-card-actions>\r\n    </mat-card>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Book, BookService } from '../service/book.service';\r\nimport { LoginService } from '../auth/login.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'book-list',\r\n  templateUrl: 'book-list.component.html'\r\n})\r\nexport class BookListComponent implements OnInit {\r\n\r\n  books: Book[];\r\n\r\n  constructor(private router: Router, private service: BookService,\r\n    public loginService: LoginService) { }\r\n\r\n  ngOnInit() {\r\n    this.service.getBooks().subscribe(\r\n      books => this.books = books,\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  newBook() {\r\n    this.router.navigate(['/book/new']);\r\n  }\r\n}\r\n","<mat-card>\r\n    <mat-card-title>\r\n        <div layout=\"row\" layout-align=\"start center\">\r\n            <span flex>Books</span>\r\n        </div>\r\n    </mat-card-title>\r\n    <mat-divider></mat-divider>\r\n    <mat-card-content>\r\n        <div>\r\n            <mat-nav-list *ngIf=\"loginService.isLogged\">\r\n                <a *ngFor=\"let book of books\" mat-list-item [routerLink]=\"['/book', book.id]\">\r\n                    {{ book.title }}\r\n                </a>\r\n            </mat-nav-list>\r\n\r\n            <mat-nav-list *ngIf=\"!loginService.isLogged\">\r\n                <mat-list-item [ngStyle]=\"{ cursor: 'auto' }\" *ngFor=\"let book of books\">\r\n                    {{ book.title }}\r\n                </mat-list-item>\r\n            </mat-nav-list>\r\n        </div>\r\n\r\n        <div layout=\"column\" layout-align=\"center end\" *ngIf=\"loginService.isLogged && loginService.isAdmin\">\r\n            <mat-divider inset=\"true\"></mat-divider>\r\n            <button mat-raised-button color=\"accent\" class=\"push-top-sm\" *ngIf=\"loginService.isLogged\" (click)=\"newBook()\">\r\n                <mat-icon>add</mat-icon> New\r\n            </button>\r\n        </div>\r\n    </mat-card-content>\r\n</mat-card>\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n selector: 'myHeader',\r\n templateUrl:\r\n './header.component.html'\r\n})\r\n\r\nexport class HeaderComponent {\r\n\r\n}","\r\n    <nav class=\"navbar navbar-expand-lg navbar-dark ftco_navbar bg-dark ftco-navbar-light\" id=\"ftco-navbar\">\r\n      <div class=\"container\">\r\n        <a class=\"navbar-brand\">Ruvik</a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#ftco-nav\" aria-controls=\"ftco-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span class=\"oi oi-menu\"></span> Menu\r\n        </button>\r\n\r\n        <div class=\"collapse navbar-collapse\" id=\"ftco-nav\">\r\n          <ul class=\"navbar-nav ml-auto\">\r\n          <li class=\"nav-item\"><a href=\"/MainPage\" class=\"nav-link\">Home</a></li>\r\n          <!-- {{#user}}   -->\r\n          <li class=\"nav-item\"><a href=\"/property-upload\" class=\"nav-link\">Poner anuncio</a></li>\r\n          <li class=\"nav-item\"><a href=\"/properties\" class=\"nav-link\">Mis favoritos</a></li>\r\n          <li class=\"nav-item\"><a href=\"/properties-modificar\" class=\"nav-link\">Mis anuncios</a></li>\r\n          <!-- {{/user}} -->\r\n          <li class=\"nav-item\"><a [routerLink]=\"['/blog']\" class=\"nav-link\">Blog</a></li>\r\n          <li class=\"nav-item\"><a href=\"/login\" class=\"nav-link\">Login</a></li>\r\n          <!-- {{#admin}} -->\r\n          <li class=\"nav-item\"><a href=\"/AllProperties\" class=\"nav-link\">Listado de anuncios</a></li>\r\n          <li class=\"nav-item\"><a href=\"/new-blog\" class=\"nav-link\">Nuevo Blog</a></li>\r\n          <!-- {{/admin}} -->\r\n        </ul>\r\n        </div>\r\n      </div>\r\n    </nav>","import { Component, ViewChild, TemplateRef } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { LoginService } from '../auth/login.service';\r\n\r\n@Component({\r\n    selector: 'login',\r\n    templateUrl: 'login.component.html',\r\n})\r\nexport class LoginComponent {\r\n    @ViewChild('loginDialog') loginDialog: TemplateRef<any>;\r\n    dialogRef: MatDialogRef<any, any>;\r\n\r\n    constructor(public dialog: MatDialog, private router: Router, public loginService: LoginService) {}\r\n\r\n    logIn(event: any, user: string, pass: string) {\r\n        event.preventDefault();\r\n\r\n        this.loginService.logIn(user, pass).subscribe(\r\n            (u) => {\r\n                console.log(u);\r\n                this.dialogRef.close();\r\n            },\r\n            (error) => alert('Invalid user or password'),\r\n        );\r\n    }\r\n\r\n    logOut() {\r\n        this.loginService.logOut().subscribe(\r\n            (response) => {\r\n                this.router.navigate(['/']);\r\n            },\r\n            (error) => console.log('Error when trying to log out: ' + error),\r\n        );\r\n    }\r\n\r\n    openLoginDialog() {\r\n        this.dialogRef = this.dialog.open(this.loginDialog, {\r\n            width: '50%',\r\n            height: '50%',\r\n        });\r\n    }\r\n}\r\n","\r\n\r\n<ng-container *ngIf=\"!loginService.isLogged\">\r\n\t<span>\r\n\t\t<button mat-button (click)='openLoginDialog()'>\r\n\t\t\tLogin\r\n\t\t</button>\r\n\t</span>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"loginService.isLogged\">\r\n\t<span>\r\n\t\t{{loginService.user.name}}\r\n\t</span>\r\n\t<span>\r\n\t\t<button mat-button (click)='logOut()'>\r\n\t\t\tLogout\r\n\t\t</button>\r\n\t</span>\r\n</ng-container>\r\n\r\n\r\n<ng-template #loginDialog let-dialogRef=\"dialogRef\">\r\n\r\n\t<div layout=\"column\" layout-fill>\r\n\t\t<h2 mat-dialog-title>\r\n\t\t\tLogin\r\n\t\t</h2>\r\n\t\t<mat-dialog-content flex>\r\n\t\t\t<form #loginForm=\"ngForm\">\r\n\t\t\t\t<div layout=\"row\">\r\n\t\t\t\t\t<mat-form-field flex>\r\n\t\t\t\t\t\t<input matInput #userElement placeholder=\"Username\" type=\"text\"\r\n\t\t\t\t\t\t\tmaxlength=\"30\" name=\"username\" required>\r\n\t\t\t\t\t\t<span matPrefix>\r\n\t\t\t\t\t\t\t<mat-icon>person</mat-icon>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<mat-hint align=\"end\">{{userElement.value.length}} / 30</mat-hint>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div layout=\"row\">\r\n\t\t\t\t\t<mat-form-field flex>\r\n\t\t\t\t\t\t<input matInput #passElement placeholder=\"Password\" type=\"password\"\r\n\t\t\t\t\t\t\tname=\"password\" required>\r\n\t\t\t\t\t\t<span matPrefix>\r\n\t\t\t\t\t\t\t<mat-icon>lock</mat-icon>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<mat-hint align=\"end\">Something hard to guess</mat-hint>\r\n\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</mat-dialog-content>\r\n\t\t<mat-divider></mat-divider>\r\n\t\t<mat-dialog-actions align=\"end\">\r\n\t\t\t<button type=\"button\" mat-button class=\"text-upper\" (click)=\"dialogRef.close()\">Close</button>\r\n\t\t\t<button type=\"button\" mat-button color=\"accent\" class=\"text-upper\" (click)=\"logIn($event, userElement.value, passElement.value)\">Login</button>\r\n\t\t</mat-dialog-actions>\r\n\t</div>\r\n\r\n</ng-template>","import { Injectable } from '@angular/core';\r\nimport {catchError, map, switchAll} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient, HttpHeaders, HttpEvent, HttpRequest} from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n\r\nconst BASE_URL= environment.baseUrl;\r\n\r\nconst GET_ADVERTISEMENT = BASE_URL + \"/advertisement/\";\r\nconst DELETE_ADVERTISEMENT = BASE_URL + \"/concept/\";\r\nconst CREATE_ADVERTISEMENT = BASE_URL + \"/concept/\";\r\n\r\nexport interface Advertisement{\r\n\r\n    id?: number;\r\n    type: string;\r\n    property:string;\r\n    rooms:number;\r\n    bathrooms:number;\r\n    squareMeters:number;\r\n    location:string;\r\n    address:string;\r\n    price:number;\r\n    picture:string;\r\n    images : Array<string>;\r\n    comments: Comment[];\r\n}\r\nconst URL = '/api/recommended/';\r\n\r\n@Injectable()\r\nexport class AdvertisementService{\r\n    private urlEndPoint: string = 'https://localhost:8443/api/recommended';\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        return Observable.throw('Server error (' + error.status + '): ' + error.text());\r\n    }\r\n\r\n    uploadFile(file:File, id): Observable<HttpEvent<{}>>{\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"id\", id);\r\n\r\n        const req = new HttpRequest('POST', `${this.urlEndPoint}/images`, formData, {\r\n        reportProgress: true\r\n        });\r\n        \r\n        return this.http.request(req);\r\n    }\r\n    getAdvertisements(): Observable<Advertisement[]> {\r\n        return this.http.get<Advertisement[]>(URL, { withCredentials: true }).pipe(catchError((error) => this.handleError(error)));\r\n    }\r\n    getAdvertisement(id: number | string) {\r\n        return this.http.get(GET_ADVERTISEMENT + id , { withCredentials: true })\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    addAdvertisement(advertisement: Advertisement, id:number):Observable<Advertisement> {\r\n        const body = JSON.stringify(advertisement);\r\n\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n        });\r\n        return this.http.post<Advertisement>(CREATE_ADVERTISEMENT + id, body, {headers})\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n\r\n    }\r\n\r\n    deleteAdvertisement(id:number){\r\n        return this.http.delete<Advertisement>(DELETE_ADVERTISEMENT +  id)\r\n            .pipe(\r\n                catchError(err => this.handleError(err))\r\n            );\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {catchError, map, switchAll} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport {HttpClient, HttpHeaders, HttpEvent, HttpRequest} from \"@angular/common/http\";\r\nimport { environment } from \"../../environments/environment\";\r\nimport { Blog } from '../entity/blog';\r\n\r\nconst BASE_URL= \"https://localhost:8443/api\";\r\n\r\nconst GET_BLOG = BASE_URL + \"/blogs/\";\r\nconst GET_BLOGS = BASE_URL + \"/blogs\";\r\nconst DELETE_BLOG = BASE_URL + \"/concept/\";\r\nconst CREATE_BLOG = BASE_URL + \"/concept/\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class BlogService{\r\n    private urlEndPoint: string = 'https://localhost:8443/api/blogs/';\r\n    private blog:  Blog[] =[];\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        return Observable.throw('Server error (' + error.status + '): ' + error);\r\n    }\r\n\r\n    \r\n\r\n    getBlog(id: number | string) {\r\n        return this.http.get(GET_BLOG + id , { withCredentials: true })\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    // addAdvertisement(blog: Blog, id:number):Observable<Blog> {\r\n    //     const body = JSON.stringify(blog);\r\n\r\n    //     const headers = new HttpHeaders({\r\n    //         'Content-Type': 'application/json',\r\n    //     });\r\n    //     return this.http.post<Blog>(CREATE_BLOG + id, body, {headers})\r\n    //         .pipe(\r\n    //             map(response => response),\r\n    //             catchError(error => this.handleError(error))\r\n    //         );\r\n\r\n    // }\r\n\r\n    getBlogs(page: number, quantity: number): Observable<Blog[]> {\r\n        return this.http.get<Blog[]>(GET_BLOGS + \"?page=\"+page+\"&number=\"+quantity, { withCredentials: true })\r\n        .pipe(map(response => response),\r\n        catchError((error) => this.handleError(error)));\r\n    }\r\n\r\n    getAdvertisement(id: number | string) {\r\n        return this.http.get(GET_BLOG + id , { withCredentials: true })\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n    }\r\n\r\n    addAdvertisement(advertisement: Blog, id:number):Observable<Blog> {\r\n        const body = JSON.stringify(advertisement);\r\n\r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n        });\r\n        return this.http.post<Blog>(CREATE_BLOG + id, body, {headers})\r\n            .pipe(\r\n                map(response => response),\r\n                catchError(error => this.handleError(error))\r\n            );\r\n\r\n    }\r\n\r\n    deleteAdvertisement(id:number){\r\n        return this.http.delete<Blog>(DELETE_BLOG +  id)\r\n            .pipe(\r\n                catchError(err => this.handleError(err))\r\n            );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nexport interface Book {\r\n    id?: number;\r\n    title: string;\r\n    description: string;\r\n}\r\n\r\nconst URL = '/api/books/';\r\n@Injectable()\r\nexport class BookService {\r\n    constructor(private http: HttpClient) {}\r\n\r\n    getBooks(): Observable<Book[]> {\r\n        return this.http.get<Book[]>(URL, { withCredentials: true }).pipe(catchError((error) => this.handleError(error)));\r\n    }\r\n\r\n    getBook(id: number | string): Observable<Book> {\r\n        return this.http.get<Book>(URL + id, { withCredentials: true }).pipe(catchError((error) => this.handleError(error)));\r\n    }\r\n\r\n    saveBook(book: Book): Observable<Book> {\r\n\r\n        const body = JSON.stringify(book);\r\n        \r\n        const headers = new HttpHeaders({\r\n            'Content-Type': 'application/json',\r\n        });\r\n\r\n        if (!book.id) {\r\n            return this.http\r\n                .post<Book>(URL, body, { headers })\r\n                .pipe(catchError((error) => this.handleError(error)));\r\n        } else {\r\n            return this.http\r\n                .put<Book>(URL + book.id, body, { headers })\r\n                .pipe(catchError((error) => this.handleError(error)));\r\n        }\r\n    }\r\n\r\n    removeBook(book: Book): Observable<Book> {\r\n        return this.http\r\n            .delete<Book>(URL + book.id)\r\n            .pipe(catchError((error) => this.handleError(error)));\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        console.error(error);\r\n        return Observable.throw('Server error (' + error.status + '): ' + error);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class SearchService{\r\n\r\n\r\n}","import { Injectable } from \"@angular/core\";\r\n\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UserService{\r\n\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  baseUrl: '/api'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}